import { z } from "zod";


const tagValidationSchema = z.object({
    name: z.string({
        required_error: "name is required.",
        invalid_type_error: "name must be string"
    }).trim(),
    isDeleted: z.boolean().default(false)
})


const courseValidationSchema = z.object({
    title: z.string({
        required_error: "title is required.",
        invalid_type_error: "title must be string."
    }).trim(),
    instructor: z.string({
        required_error: "instructor is required.",
        invalid_type_error: "instructor must be string."
    }).trim(),
    categoryId: z.string(),
    price: z.number({
        required_error: "price is required.",
        invalid_type_error: 'price must be number.'
    }),
    tags: z.array(tagValidationSchema).min(1, "must contain 1 or more item."),
    startDate: z.string({
        required_error: "startDate is required.",
    }),
    endDate: z.string({
        required_error: "endDate is required.",
    }),
    language: z.string({
        required_error: "language is required.",
        invalid_type_error: 'language must be string.'
    }),
    provider: z.string({
        required_error: "provider is required.",
        invalid_type_error: 'provider must be string.'
    }),
    durationInWeeks: z.number(),
    details: z.object({
        level: z.string({
            required_error: "level is required.",
            invalid_type_error: "level must be string."
        }).trim(),
        description: z.string({
            required_error: "description is required.",
            invalid_type_error: "level must be description."
        }).trim()
    })
})

export const courseValidations = {
    courseValidationSchema
}
/**
 * _id (Object ID): A distinctive identifier generated by MongoDB.
title (String): A unique title of the course.
instructor (String): The instructor of the course.
categoryId (Object ID): A reference to the category collection.
price (Number): The price of the course.
tags(Array of Object): The "tags" field is an array of objects, each having a "name" (string) and "isDeleted" (boolean) property.
startDate (String): The start date of the course.
endDate (String): The end date of the course.
language (String): The language in which the course is conducted.
provider (String): The provider of the course.
durationInWeeks (Integer): This represents the course's overall duration in weeks, calculated by applying the ceil function to the numeric value derived from the start and end dates. The resulting number is rounded up to the nearest integer, ensuring that the duration is expressed solely as an integer with no allowance for floating-point numbers.
details (Object):
level (string): e.g., Beginner, Intermediate, Advanced.
description (string): Detailed description of the course
 */